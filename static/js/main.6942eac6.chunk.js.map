{"version":3,"sources":["style/ProfileStyles.js","FilterData.js","Profile.js","Card.js","style/HeaderStyles.js","Filter.js","FilterDropdown.js","FilterContainer.js","ProfileContainer.js","Container.js","style/Style.js","entry/FilterEntry.js","entry/BioEntry.js","entry/TextEditor.js","entry/BasicsEntry.js","entry/Entry.js","Instructions.js","Housing.js","RoommateHelp.js","App.js","reportWebVitals.js","index.js"],"names":["StyledContainer","styled","div","StyledProfileCont","StyledCard","StyledProfile","props","opacity","Overlay","filters","identity","sleep","school","mbti","region","campus","dorm","other","filterArr","concat","apply","Object","values","schoolIcons","Profile","keys","i","length","schools","this","filter","val","includes","overlay","ref","innerRef","onClick","className","src","img","alt","name","basics","pronouns","map","matchIcon","major","location","target","social","ig","href","snap","phone","roommate","style","whiteSpace","about","bio","looking","React","Component","Card","state","profileOpen","wrapperRef","createRef","setWrapperRef","handleClickOutside","bind","document","addEventListener","removeEventListener","setState","event","current","contains","closeProfile","display","openProfile","marginBottom","wordWrap","fontSize","quote","StyledFilterContainer","StyledFilters","StyledDropdown","overflow","Filter","background","color","FilterDropdown","filterName","index","getFilterIndex","console","log","filterNames","filterIndex","arr","push","openDropdown","title","renderFilters","FilterContainer","dropdowns","Array","fill","dropdown","dropdownIndex","dropdownCopy","slice","x","renderDropdowns","defaultProps","ProfileContainer","callAPI","a","fetch","res","json","resjson","profiles","data","cardInfo","loading","showCard","roommateOnly","onFilters","f","splice","on","removeFilter","addFilter","show","includesFilter","setTimeout","cardFilters","counter","info","card","firstName","lastName","handleClick","showCardCopy","cards","filterClick","colors","filterColors","type","id","onChange","toggleRoommate","for","renderCards","Container","EmailEntry","EntryContainer","EntryForm","form","StyledFilterEntry","StyledEditor","StyledHousing","FilterEntry","category","value","updateData","arrCopy","required","option","e","checked","isChecked","showRequired","renderGroup","BioEntry","class","maxLength","height","BasicsEntry","fileToDataUri","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","uploadImg","preventDefault","newImg","imgurDelete","imageDelete","formData","FormData","append","imageFile","then","split","blob","imgurPost","chooseFile","hiddenFileInput","click","image","copy","files","base64","method","headers","process","body","status","handleImg","link","deleteHash","deletehash","catch","err","handleUpload","placeholder","snapchat","marginLeft","url","Entry","checkEmail","email","newEntry","addUser","getData","handleChange","handleSubmit","currentTab","tab","userId","callUpdate","emailChecked","emailMsg","entryMsg","postMsg","imgDelete","isPosted","deleting","deleteMsg","prevState","updateLastLogin","JSON","stringify","message","setEntryMsg","msg","posting","replace","g","toUpperCase","isFilled","keyArr","key","trim","isArray","resData","history","changeTab","handlePost","onSubmit","renderTab","deleteProfile","Instructions","Housing","RoommateHelp","noop","App","warn","to","path","exact","component","render","withRouter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.6942eac6.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n//import \"./animations.css\";\r\n\r\n// export const StyledProfile = styled.div`\r\n// `\r\n\r\n// should this be moved to headerstyles\r\nexport const StyledContainer = styled.div`\r\n    width: 65vw;\r\n    margin: auto;\r\n    //text-align: center;\r\n\r\n    .header {\r\n        position: relative;\r\n        top: 0;\r\n        display: block;\r\n        padding: 1rem 0 2rem 0;\r\n        background: #fafafa;\r\n\r\n        a {\r\n            margin-right: 1.5rem;\r\n            background: transparent;\r\n        }\r\n    }\r\n\r\n    .authenticate {\r\n        display: flex;\r\n    }\r\n\r\n`\r\n\r\nexport const StyledProfileCont = styled.div`\r\n    position:relative;\r\n    display:grid;\r\n    padding:0 10px 10vh 10px;\r\n    grid-gap:70px;\r\n    grid-template-columns: repeat( auto-fit, minmax(200px, 1fr) );\r\n    justify-content:center;\r\n    justify-items:center;\r\n`\r\n\r\nexport const StyledCard = styled.div`\r\n    //position: relative;\r\n    background: #fff;\r\n    padding: 2rem;\r\n    width: 250px; /* temp */\r\n    height: 250px;\r\n\r\n    margin: 2rem;\r\n    border-radius: 2rem;\r\n    box-shadow: 1px 1px 30px 3px #eaeaea;\r\n    text-align: center;\r\n\r\n    :hover {\r\n        cursor: pointer;\r\n    }\r\n\r\n    img {\r\n        border-radius: 50%;\r\n        display: block;\r\n        margin: auto;\r\n        width: 100px;\r\n        height: 100px;\r\n        object-fit: cover;\r\n    }\r\n`\r\n\r\nexport const StyledProfile = styled.div`\r\n    position: fixed;\r\n    width: 65vw;\r\n    //height: 62vh;\r\n    transform: translateX(-50%) translateY(-50%);\r\n    top: 50%;\r\n    left: 50%;\r\n    background: #fff;\r\n    padding: 2rem;\r\n    border-radius: 2rem;\r\n    opacity: ${props => props.opacity};\r\n    animation: ${props => props.opacity == 1 ? \"fadeIn\" : \"fadeOut\"} 1s;\r\n    z-index: 99999;\r\n\r\n    .close {\r\n        i {\r\n            float: right;\r\n            font-size: 1.5rem;\r\n        }\r\n        \r\n        :hover {\r\n            cursor: pointer;\r\n        }\r\n    }\r\n\r\n    img {\r\n        object-fit: cover;\r\n        border-radius: 2rem;\r\n        width: 125px;\r\n        height: 125px;\r\n    }\r\n\r\n    .side {\r\n        float: left;\r\n        width: 200px;\r\n        margin-right: 2rem;\r\n\r\n        .basics, .social-media {\r\n            span {\r\n                display: block;\r\n            }\r\n        }\r\n\r\n        .basics {\r\n            padding-bottom: 1rem;\r\n            border-bottom: 1px solid #eee;\r\n            margin-bottom: 1rem;\r\n        }\r\n\r\n        .roommate-label {\r\n            margin: 1.5rem 0 0 0;\r\n            font-size: 13px;\r\n            padding: 0.75rem;\r\n            background: #BCDAF6;\r\n            border-radius: 2rem;\r\n            text-align: center;\r\n        }\r\n    }\r\n\r\n    .bio-filters {\r\n        span {\r\n            padding: 0.5rem 1rem;\r\n            border-radius: 1rem;\r\n            background: rgb(199, 187, 227, 0.5);\r\n            margin: 0 1rem 1rem 0;\r\n            display: inline-block;\r\n        }\r\n\r\n        margin: 1rem 0 0 200px;\r\n        padding-bottom: 1rem;\r\n        border-bottom: 1px solid #eee;\r\n        width: calc(65vw - 200px - 4rem);\r\n    }\r\n\r\n    .bio {\r\n        display: flex;\r\n\r\n        .looking-for, .about {\r\n            width: 50%;\r\n        }\r\n\r\n        .about {\r\n            padding: 0 1.5rem 0 0;\r\n        }\r\n\r\n        .looking-for {\r\n            padding: 0 1.25rem;\r\n        }\r\n\r\n        h1 {\r\n            font-size: 1.3rem;\r\n        }\r\n       \r\n    }\r\n`\r\n\r\nexport const Overlay = styled.div`\r\n    background: rgb(0, 0, 0, ${props => props.opacity});\r\n    position: fixed;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 99999;\r\n`","export const filters = {\r\n    identity: [\"female-identifying\", \"male-identifying\", \"neither female nor male\"],\r\n    sleep: [\"early bird\", \"night owl\"],\r\n    school: [\"Weinberg\", \"McCormick\", \"School of Communication\", \"Medill\", \"Bienen\", \"SESP\"],\r\n    mbti: [\"INTJ\", \"INTP\", \"ENTJ\", \"ENTP\", \"INFJ\", \"INFP\", \"ENFJ\", \"ENFP\", \"ISTJ\", \"ISFJ\", \"ESTJ\", \"ESJA\", \"ISTP\", \"ISFP\", \"ESTP\", \"ESFP\"],\r\n    region: [\"West\", \"Midwest\", \"South\", \"Mid-Atlantic\", \"Northeast\"],\r\n    campus: [\"north campus\", \"south campus\", \"no campus preference\"], // neither = no campus pref?\r\n    dorm: [\"Elder\", \"Lincoln\", \"Kemper\", \"Sheridan\", \"Bobb\", \"McCulloch\", \"Sargent\", \"Lindgren\", \"GREEN House\", \"Goodrich\", \"Ayers\", \"Slivka\", \"Allison\", \"Jones\", \"1838 Chicago\", \"Shepard\", \"Rogers\", \"East Fairchild\", \"West Fairchild\", \"Hobart\", \"Foster-Walker\", \"Emerson\", \"Orrington\", \"Willard\", \"Chapin\", \"North Mid-Quads\", \"South Mid-Quads\"],\r\n    other: [\"Questbridge/FGLI/etc\", \"International\", \"planning to rush\"],\r\n    // cleanliness: [...Array(6).keys()],\r\n    // partying: [...Array(6).keys()],\r\n}\r\n\r\n// combine filters into one array \r\nexport const filterArr = [].concat.apply([], Object.values(filters));","import React from 'react';\r\nimport { StyledProfile, Overlay } from './style/ProfileStyles';\r\nimport 'remixicon/fonts/remixicon.css';\r\n\r\nimport {filters} from './FilterData';\r\n\r\nconst schoolIcons = {\r\n    \"Weinberg\": \"ri-test-tube-line\",\r\n    \"McCormick\": \"ri-settings-3-line\",\r\n    \"School of Communication\": \"ri-wechat-2-line\",\r\n    \"Medill\": \"ri-newspaper-line\",\r\n    \"Bienen\": \"ri-music-2-line\",\r\n    \"SESP\": \"ri-government-fil\"\r\n}\r\n\r\nexport class Profile extends React.Component {\r\n    matchIcon(school) {\r\n        let keys = Object.keys(schoolIcons);\r\n        for (let i = 0; i < keys.length; i++) {\r\n            if (keys[i] == school) {\r\n                return schoolIcons[keys[i]];\r\n            }\r\n        }\r\n    }\r\n\r\n    render () {\r\n        let schools = this.props.filters.filter(val => filters[\"school\"].includes(val));\r\n        return (\r\n            <Overlay opacity={this.props.overlay}>\r\n                <StyledProfile ref={this.props.innerRef} opacity={this.props.opacity}>\r\n                <div onClick={this.props.onClick} className=\"close\"><i className=\"ri-close-fill\"></i></div>\r\n\r\n                <div className=\"side\">\r\n                    <img src={this.props.img ? this.props.img : \"/wildcat-roomie/pfp.jpg\"} alt=\"profile img\"/>\r\n                    <h1>{this.props.name}</h1>\r\n\r\n                    <div className=\"basics\">\r\n                        <span><i className=\"ri-user-line\"></i> {this.props.basics.pronouns}</span>\r\n                        {schools.map(school => <span><i className={this.matchIcon(school)}></i> {school}</span>)}\r\n                        <span><i className=\"ri-pencil-line\"></i> {this.props.basics.major}</span>\r\n                        <span><i className=\"ri-star-line\"></i> {this.props.filters.filter(val => filters[\"mbti\"].includes(val))}</span>\r\n                        <span><i className=\"ri-map-pin-line\"></i> {this.props.basics.location}</span>\r\n                    </div>\r\n\r\n                    <div className=\"social-media\">\r\n                        <span><i className=\"ri-instagram-line\"></i> <a target={this.props.social.ig ? \"_blank\" : null} href={this.props.social.ig ? `https://instagram.com/${this.props.social.ig}` : \"\"}> {this.props.social.ig ? this.props.social.ig : \"\"}</a></span>\r\n                        <span><i className=\"ri-snapchat-line\"></i> {this.props.social.snap ? this.props.social.snap : \"\"}</span>\r\n                        <span><i className=\"ri-phone-line\"></i> {this.props.social.phone ? this.props.social.phone : \"\"}</span>\r\n                    </div>\r\n\r\n                    <div className=\"roommate-label\">\r\n                        {this.props.roommate ? <><b>looking</b> for roommate</> :<><b>not looking</b> for roommate</>}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"bio-filters\">\r\n                    {this.props.filters.map(filter => {\r\n                        if (filter == \"none\" || filter == \"both/neither\") {\r\n                            return;\r\n                        } \r\n                        return <span>{filter}</span>;\r\n                    })}\r\n                </div>\r\n\r\n                <div className=\"bio\">\r\n                    <div className=\"about\" style={{whiteSpace: \"pre-wrap\"}}>\r\n                        <h1>about</h1>\r\n                        {this.props.about.bio}\r\n                    </div>\r\n                    <div className=\"looking-for\" style={{whiteSpace: \"pre-wrap\"}}>\r\n                        <h1>looking for</h1>\r\n                        {this.props.about.looking}\r\n                    </div>\r\n                </div>\r\n                </StyledProfile>\r\n            </Overlay>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\n//import FlipMove from 'react-flip-move';\r\nimport { StyledCard } from './style/ProfileStyles';\r\nimport { Profile } from './Profile';\r\n\r\nexport class Card extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            profileOpen: false,\r\n            overlay: 0,\r\n            opacity: 0\r\n        }\r\n        this.wrapperRef = React.createRef();\r\n        this.setWrapperRef = this.setWrapperRef;\r\n        this.handleClickOutside = this.handleClickOutside.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        document.addEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        document.removeEventListener('mousedown', this.handleClickOutside);\r\n    }\r\n\r\n    openProfile () {\r\n        this.setState({\r\n            profileOpen: true,\r\n            overlay: 0.5,\r\n            opacity: 1\r\n        });\r\n    }\r\n\r\n    closeProfile () {\r\n        this.setState({\r\n            profileOpen: false,\r\n            opacity: 0\r\n        });\r\n    }\r\n\r\n    handleClickOutside (event) {\r\n        if (this.state.profileOpen && this.wrapperRef && !this.wrapperRef.current.contains(event.target)) {\r\n            this.closeProfile();\r\n        }\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <>\r\n            {this.state.profileOpen ? \r\n                <Profile\r\n                    innerRef={this.wrapperRef} \r\n                    onClick={() => this.closeProfile()} \r\n                    img={this.props.img} \r\n                    name={this.props.name}\r\n                    about={this.props.about}\r\n                    filters={this.props.filters}\r\n                    social={this.props.social}\r\n                    basics={this.props.basics}\r\n                    roommate={this.props.roommate}\r\n                    overlay={this.state.overlay}\r\n                    opacity={this.state.opacity}/> \r\n                : null\r\n            } \r\n            {this.props.display ? \r\n                <StyledCard onClick={() => this.openProfile()}>\r\n                    <img src={this.props.img ? this.props.img : \"/wildcat-roomie/pfp.jpg\"} alt=\"profile image\"></img>\r\n                    <h1 style={{marginBottom: 0}}>{this.props.name}</h1>\r\n                    <i style={{wordWrap: \"break-word\", fontSize: \"0.9rem\"}}>{this.props.about.quote}</i>\r\n                </StyledCard>\r\n                : null\r\n            }\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n// animation works when showing it but not hidnig it","import styled from 'styled-components';\r\n\r\n// export const StyledProfile = styled.div`\r\n// `\r\n\r\n// export const StyledFilters = styled.div`\r\n//     .filter {\r\n//         border-radius: 1rem;\r\n//         padding: 0.5rem 1rem;\r\n//         margin-right: 1rem;\r\n//         background: #b3a2d3;\r\n//         display: inline-block;\r\n\r\n//         :hover {\r\n//             cursor: pointer;\r\n//         }\r\n//     }\r\n// `\r\n\r\nexport const StyledFilterContainer = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: center;\r\n    font-family: 'Karla', sans-serif;\r\n    position: sticky;\r\n    top: 0;\r\n    padding: 2rem 0 1rem 0;\r\n    background: #fafafa;\r\n    z-index: 999;\r\n`;\r\n\r\nexport const StyledFilters = styled.div`\r\n    .filter {\r\n        display: block;\r\n        padding: 0.5rem 1rem;\r\n        min-width: 7.5rem;\r\n    }\r\n`\r\n\r\nexport const StyledDropdown = styled.div`\r\n    z-index: ${props => props.overflow == \"hidden\" ? \"0\" : \"99999\"};\r\n    border-radius: 1rem;\r\n    padding: 0.5rem 1rem;\r\n    margin-right: 1rem;\r\n    margin-bottom: 1rem;\r\n    background: #C7BBE3;\r\n    height: 2rem;\r\n    overflow: ${props => props.overflow};\r\n    text-align: center;\r\n\r\n    :hover {\r\n        cursor: pointer;\r\n        background: #7863AE;\r\n        transition: 0.2s linear;\r\n    }\r\n\r\n    span {\r\n        display: block;\r\n        margin-bottom: 0.5rem;\r\n    }\r\n`\r\n\r\n","import React from 'react';\r\n\r\nexport class Filter extends React.Component {\r\n    render () {\r\n        return (\r\n            <div \r\n                className=\"filter\"\r\n                onClick={this.props.onClick}\r\n                style={{background: this.props.color}}\r\n                >\r\n                {this.props.name}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\n\r\nimport { Filter } from './Filter';\r\nimport { StyledDropdown, StyledFilters } from './style/HeaderStyles';\r\nimport { filterArr } from './FilterData';\r\n\r\nexport class FilterDropdown extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            overflow: \"hidden\"\r\n        }\r\n    }\r\n\r\n    getFilterIndex (filter) {\r\n        for (let i = 0; i < filterArr.length; i++) {\r\n            if (filterArr[i] === filter) return i;\r\n        }\r\n    }\r\n\r\n    handleColor (filterName) {\r\n        let index = this.getFilterIndex(filterName);\r\n        console.log(index)\r\n        return (this.props.filters[index] ? \"#b3a2d3\" : \"#dad2ea\");\r\n    }\r\n\r\n    renderFilters (filterNames) {\r\n        let arr = [];\r\n        let filter, filterIndex;\r\n        for (let i = 0; i < filterNames.length; i++) {\r\n            filterIndex = this.getFilterIndex(filterNames[i]);\r\n            filter = <Filter \r\n                className=\"filter\"\r\n                filterIndex={filterIndex}\r\n                onClick={() => this.props.onClick(i)} \r\n                name={filterNames[i]} \r\n                color={this.props.filters[filterIndex] ? \"#7863AE\" : \"#C7BBE3\"}/>\r\n            arr.push(filter);\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    handleClick () {\r\n        if (this.state.overflow == \"hidden\") {\r\n            this.setState({ overflow: \"show\" });\r\n        }\r\n        else {\r\n            this.setState({ overflow: \"hidden\" });\r\n        }\r\n    }\r\n    // changing overflow not the ideal way bc it moves all the other elements up/down.. i mean it's fine..\r\n\r\n    render () {\r\n        return (\r\n            <StyledDropdown onClick={() => this.props.openDropdown()} overflow={this.props.overflow}>\r\n                <span>{this.props.title}</span>\r\n                <StyledFilters>\r\n                    {this.renderFilters(this.props.filterNames)}\r\n                </StyledFilters>\r\n            </StyledDropdown>\r\n        )\r\n    }\r\n}\r\n\r\n// TODO: change color when opened\r\n// each section has its own arr and the arrs are .concat() together \r\n// how does the filter arr (true, true, false, etc.) work then - maybe i can combine the arrays in FilterContainer ?","import React from 'react';\r\nimport { StyledFilters, StyledFilterContainer } from './style/HeaderStyles';\r\nimport { Filter } from './Filter';\r\nimport { FilterDropdown } from './FilterDropdown';\r\n\r\nimport { filters, filterArr } from './FilterData';\r\n\r\nexport class FilterContainer extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            dropdowns: Array(Object.keys(filters).length).fill(false)\r\n        }\r\n    }\r\n\r\n    // renderFilters (filterNames) {\r\n    //     let arr = [];\r\n    //     let filter;\r\n    //     for (let i = 0; i < filterNames.length; i++) {\r\n    //         filter = <Filter \r\n    //             onClick={() => this.props.onClick(i)}\r\n    //             //index={i}\r\n    //             name={filterNames[i]} \r\n    //             // on={this.props.filters[i] ? 1 : 0}\r\n    //             color={this.props.filters[i] ? \"#b3a2d3\" : \"#dad2ea\"}/>\r\n    //         arr.push(filter);\r\n    //     }\r\n    //     return arr;\r\n    // }\r\n\r\n    getFilterIndex (filter) {\r\n        for (let i = 0; i < filterArr; i++) {\r\n            if (filterArr[i] == filter) return i;\r\n        }\r\n    }\r\n\r\n    renderDropdowns () {\r\n        let arr = [];\r\n        let dropdown;\r\n        for (let i = 0; i < Object.values(filters).length; i++) {\r\n            dropdown = <FilterDropdown\r\n                            title={Object.keys(filters)[i]}\r\n                            filterNames={Object.values(filters)[i]} // ??? \r\n                            filters={this.props.filters}\r\n                            dropdownIndex={i}\r\n                            onClick={(filterIndex) => this.props.onClick(filterIndex, i)} // i = dropDown index\r\n                            openDropdown={() => this.openDropdown(i)}\r\n                            overflow={this.state.dropdowns[i] ? \"overflow\" : \"hidden\"}\r\n                        />\r\n            arr.push(dropdown);\r\n        }\r\n        return arr;\r\n    }\r\n    // make it so that for (most)some of them, user can only choose one filter from dropdown\r\n    // once you click on one of the filters of the dropdown, the other filters are \"unclicked\"\r\n    // the clicking doesn't work properly \r\n    // get index of filter in the filterArr\r\n\r\n    openDropdown(i) {\r\n        let dropdownCopy = this.state.dropdowns.slice();\r\n        for (let x = 0; x < dropdownCopy.length; x++) {\r\n            if (x !== i) {\r\n              dropdownCopy[x] = false;\r\n            }\r\n        }          \r\n        if (!dropdownCopy[i]) {\r\n            dropdownCopy[i] = true;\r\n        } else {\r\n            dropdownCopy[i] = false;\r\n        }\r\n        this.setState({ dropdowns: dropdownCopy });\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <StyledFilterContainer>\r\n                {this.renderDropdowns()}\r\n            </StyledFilterContainer>\r\n        )\r\n    } // increase zindex only when opened?\r\n}\r\n\r\nFilterContainer.defaultProps = {\r\n    filterArr: filterArr\r\n}\r\n\r\n  \r\n/* CHANGES\r\nfilterNames should still be all the filters \r\nfilterContainer contains each filterDropdown\r\nfilterDropdwon contains its respective filters \r\n*/","import React from 'react';\r\nimport { Card } from './Card';\r\nimport { StyledProfileCont } from './style/ProfileStyles';\r\nimport { FilterContainer } from './FilterContainer';\r\n//import {Animated} from \"react-animated-css\";\r\n\r\nimport { filters, filterArr } from './FilterData';\r\n//const filters = [\"morning\", \"STEM\"];\r\n\r\nexport class ProfileContainer extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            filterNames: filterArr, // do i just put the long array of filters here \r\n            filters: new Array(filterArr.length).fill(false), // length: 23 + # of dorms + # of schools \r\n            roommateOnly: false,\r\n            onFilters: [], \r\n            showCard: new Array(1).fill(true), \r\n            cardInfo: [],\r\n            loading: true,\r\n        }\r\n    }\r\n\r\n    componentDidMount () {\r\n        this.callAPI();\r\n        // let copy = this.state.cardInfo.slice();\r\n        // for (let i = 0; i < copy.length; i++) {\r\n        //     if (copy[i].roommate) {\r\n        //         copy[i].filters.push(\"roommate\");\r\n        //     }\r\n        // }\r\n        // this.setState({ cardInfo: copy });\r\n        //this.testAPI();\r\n        //this.state.filters.fill(false);\r\n        //console.log(this.state.filters);\r\n        //this.state.showCard.fill(true);\r\n    }\r\n\r\n    componentDidUpdate () {\r\n        //console.log(this.state.filters);\r\n    }\r\n\r\n    callAPI = async () => {\r\n        const res = await fetch(`https://wildcat-roomie.herokuapp.com/api/profiles/all`);\r\n        const resjson = await res.json();\r\n        const profiles = resjson.data;\r\n        console.log(profiles)\r\n        this.setState({ \r\n            cardInfo: [...profiles],\r\n            //cardInfo: [...cardInfoLocal],\r\n            loading: false,\r\n            showCard: new Array(profiles.length).fill(true),\r\n        });\r\n    }\r\n\r\n    // testAPI = async () => {\r\n    //     const res = await fetch(`http://localhost:9000/testAPI/test`);\r\n    //     const resjson = await res.json();\r\n    //     //console.log(resjson);\r\n    // }\r\n\r\n    addFilter (f) {\r\n        this.state.onFilters.push(f);\r\n    }\r\n\r\n    removeFilter (f) {\r\n        for (let i = 0; i < this.state.onFilters.length; i++) {\r\n            if (this.state.onFilters[i] == f) {\r\n                this.state.onFilters.splice(i, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    handleClick (on, f, index, cardInfo) {\r\n        if (on) {\r\n            this.state.filters[index] = false;\r\n            this.removeFilter(f);\r\n        } else {\r\n            this.state.filters[index] = true;\r\n            this.addFilter(f);\r\n        }\r\n        console.log(this.state.filters);\r\n        console.log(this.state.onFilters);\r\n        console.log(\"\\n\");\r\n        let show = this.state.showCard.slice();\r\n        for (let i = 0; i < this.state.cardInfo.length; i++) {\r\n            if (!this.includesFilter(this.state.onFilters, this.state.cardInfo[i].filters)) {\r\n                show[i] = false;\r\n            } else {\r\n                show[i] = true;\r\n            }\r\n        }\r\n        console.log(\"showCard: \"+show);\r\n        if (this.state.onFilters.length == 0) show.fill(true);\r\n        this.setState({ showCard: [...show] });\r\n        setTimeout(() => {\r\n            console.log(\"state.showCard: \"+this.state.showCard);\r\n        }, 1000);\r\n    }\r\n\r\n    // if array cardFilters has ALL of the items in array filters\r\n    includesFilter (filters, cardFilters) {\r\n        let counter = 0;\r\n        for (let i = 0; i < filters.length; i++) {\r\n            if (cardFilters.includes(filters[i])) {\r\n                counter++;\r\n            }\r\n        }\r\n        if (counter == filters.length) return true;\r\n        return false;\r\n    }\r\n\r\n    renderCards (info) {\r\n        let arr = [];\r\n        let card;\r\n        for (let i = 0; i < info.length; i++) {\r\n            // if (this.state.showCard[i] == false) {\r\n            //     card = null;\r\n            // } else {\r\n            //     card = <Card name={info[i].name} img={info[i].img} filters={info[i].filters}/>\r\n            // }\r\n            card = (\r\n                <Card \r\n                    key={info[i].name}\r\n                    name={`${info[i].firstName} ${info[i].lastName}`} \r\n                    img={info[i].img} \r\n                    filters={info[i].filters} \r\n                    display={this.state.showCard[i]}\r\n                    basics={info[i].basics}\r\n                    social={info[i].social}\r\n                    about={info[i].about}\r\n                    roommate={info[i].roommate}\r\n                    />\r\n            )\r\n            arr.push(card);\r\n        }\r\n        console.log(arr);\r\n        return(arr);\r\n    }\r\n\r\n    getFilterIndex (filterIndex, dropdownIndex) {\r\n        let keys = Object.keys(filters);\r\n        let filter = filters[keys[dropdownIndex]][filterIndex];\r\n        for (let i = 0; i < filterArr.length; i++) {\r\n          if (filterArr[i] == filter) return i;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    filterClick (filterIndex, dropdownIndex) {\r\n        let i = this.getFilterIndex(filterIndex, dropdownIndex);\r\n        this.handleClick(this.state.filters[i], this.state.filterNames[i], i, this.state.cardInfo);\r\n    }\r\n\r\n    toggleRoommate() {\r\n        let showCardCopy = this.state.showCard.slice();\r\n        let cards = this.state.cardInfo.slice();\r\n        for (let i = 0; i < cards.length; i++) {\r\n            if (!cards[i].roommate) {\r\n                showCardCopy[i] = this.state.roommateOnly; // originally set to false\r\n            }\r\n        }\r\n        this.setState({ showCard: showCardCopy, roommateOnly: !this.state.roommateOnly });\r\n        // loop through filters array and set to false if that profile roommate property is false\r\n    }\r\n\r\n    render () {\r\n        // const data = JSON.parse(this.props.apiResponse);\r\n        // let dataArr = [data];\r\n        // console.log(dataArr);\r\n        //let cardInfo = [data];\r\n        if (this.state.loading) return (\r\n            <>\r\n            <FilterContainer \r\n                //onClick={(i) => this.handleClick(this.state.filters[i], this.state.filterNames[i], i, this.state.cardInfo)}\r\n                onClick={(filterIndex, dropdownIndex) => this.filterClick(filterIndex, dropdownIndex)}\r\n                filterNames={this.state.filterNames} \r\n                filters={this.state.filters} \r\n                colors={this.state.filterColors}\r\n            /> \r\n            <h1>loading...</h1>\r\n            </>\r\n        );\r\n\r\n        return (\r\n            <> \r\n            <FilterContainer \r\n                //onClick={(i) => this.handleClick(this.state.filters[i], this.state.filterNames[i], i, this.state.cardInfo)}\r\n                onClick={(filterIndex, dropdownIndex) => this.filterClick(filterIndex, dropdownIndex)}\r\n                filterNames={this.state.filterNames} \r\n                filters={this.state.filters} \r\n                colors={this.state.filterColors}\r\n            /> \r\n\r\n            <div style={{display: \"flex\"}}>\r\n                <input \r\n                    type=\"checkbox\" id=\"roommate\"\r\n                    onChange={() => this.toggleRoommate()}/>\r\n                <label for=\"roommate\">show only those looking for roommate</label>\r\n            </div>\r\n            \r\n            <StyledProfileCont>\r\n                {this.renderCards(this.state.cardInfo)}\r\n            </StyledProfileCont>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nlet lorem = \"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.\";\r\nlet lorem2 = lorem + lorem;\r\nlet basics = {\r\n    school: \"McCormick\",\r\n    major: \"computer science\",\r\n    personality: \"INFJ\",\r\n    location: \"NYC\",\r\n}\r\nlet social = {\r\n    ig: \"dklarachel\",\r\n    snap: \"lechar.mai\",\r\n    phone: \"917 392 1992\"\r\n}\r\nlet cardInfoLocal = [\r\n    {\r\n        name: \"helene aquilla\",\r\n        img: \"/pfp.jpg\",\r\n        filters: [\"morning\"],\r\n        bio: {\r\n            about: lorem,\r\n            looking: lorem2,\r\n            location: \"NYC\"\r\n        }\r\n    },\r\n    {\r\n        name: \"maven calore\",\r\n        img: \"https://i.imgur.com/8NOcnwx.png\",\r\n        filters: [\"STEM\"],\r\n        bio: {\r\n            about: lorem,\r\n            looking: lorem2,\r\n            location: \"NYC\"\r\n        }\r\n    },\r\n    {\r\n        name: \"lila bard\",\r\n        img: \"https://i.imgur.com/8d3uzkw.png\",\r\n        filters: [\"morning\", \"STEM\"],\r\n        bio: {\r\n            about: lorem,\r\n            looking: lorem2,\r\n            location: \"NYC\"\r\n        }\r\n    },\r\n    {\r\n        name: \"inej ghafa\",\r\n        img: \"https://i.imgur.com/qTiWjPw.png\",\r\n        filters: [\"night\"],\r\n        bio: {\r\n            about: lorem,\r\n            looking: lorem2,\r\n            location: \"NYC\"\r\n        }\r\n    },\r\n    {\r\n        name: \"nina zenik\",\r\n        img: \"https://i.pinimg.com/564x/0b/2e/88/0b2e888de375655b6f929d5004eeef02.jpg\",\r\n        filters: [\"night\", \"STEM\"],\r\n        bio: {\r\n            about: lorem,\r\n            looking: lorem2,\r\n            location: \"NYC\"\r\n        }\r\n    }\r\n];\r\n\r\n/* ALL FILTERS\r\n\r\none or the other:\r\n- sleep: morning person, night person, both/neither\r\n- campus preference: north, south, both/neither\r\n- dorm preference: [dorm], none (or just \"none\"  in list of dorms)\r\n- personality \r\n- location (region)\r\n\r\nhas filter or doesn't have filter:\r\n- QB/low-income\r\n- international \r\n\r\nmultiple: (optional)\r\n- dorm preference: [dorm...]\r\n\r\nscale 0 to 5: (can filter multiple)\r\n- cleanliness\r\n- partying \r\n\r\n*/\r\n\r\nlet demo = {\r\n    name: \"name\",\r\n    img: \"url\",\r\n    filters: [\r\n        \"morning\",\r\n        \"both/neither\",\r\n        \"INFJ\",\r\n        \"Mid-Atlantic\",\r\n        \"Questbridge\",\r\n        \"cleanliness: 5\",\r\n        \"partying: 1\"\r\n    ],\r\n    bio: {\r\n        about: \"about\",\r\n        looking: \"looking for\",\r\n        location: \"location\"\r\n    },\r\n    social: {\r\n        ig: \"dklarachel\",\r\n        snap: \"lechar.mai\",\r\n        phone: \"917 392 1992\"\r\n    }\r\n}\r\n\r\n\r\n\r\n// here, have a boolean for whether that card should be shown? \r\n// this component needs to know the array of turn on filters\r\n// each Card can have a prop with that array\r\n\r\n// function to get the onFilters array on mount?\r\n\r\n// component updates --> onFilter changes --> if filters doesnt have any in onFilters, hide card\r\n// array showCard \r\n// should prob have renderCards method \r\n// re-render with renderCards \r\n\r\n// the cards aren't re-rendering by themselves \r\n// but it starts doing that weird thing again","import React from 'react';\r\nimport { ProfileContainer } from './ProfileContainer';\r\nimport { StyledContainer } from './style/ProfileStyles';\r\nimport { FilterContainer } from './FilterContainer';\r\n\r\nfunction Container (props) {\r\n    return (\r\n        <div>\r\n            <ProfileContainer/>\r\n        </div>\r\n    );\r\n}\r\n\r\n/* header\r\n- instructions (popup)\r\n- new entry (popup)\r\n- view dorms (external link)\r\n- groupme (external link)\r\n- questions to ask (popup)\r\n*/\r\n\r\nexport default Container;","import styled from 'styled-components';\r\n\r\n// export const StyledProfile = styled.div`\r\n// `\r\n\r\nexport const EmailEntry = styled.div`\r\n    margin: 2rem auto;\r\n    width: 200px;\r\n    text-align: center;\r\n\r\n    label {\r\n        font-weight: 600;\r\n        font-size: 1.3rem;\r\n        font-family: 'Karla', sans-serif;\r\n    }\r\n    \r\n    input[type=\"submit\"] {\r\n        margin: 1rem auto;\r\n    }\r\n`\r\n\r\nexport const EntryContainer = styled.div`\r\n    //border: 1px solid lightblue;\r\n    .nav {\r\n        position: fixed;\r\n        top: 50%;\r\n        left: 8rem;\r\n        transform: translateY(-50%);\r\n        border-radius: 2rem;\r\n        width: 150px;\r\n        text-align: center;\r\n\r\n        button {\r\n            display: block;\r\n            font-size: 1.5rem;\r\n            padding: 1.5rem;\r\n            margin: 1rem;\r\n            background: transparent;\r\n\r\n            :hover {\r\n                color: #999;\r\n            }\r\n        }\r\n\r\n    }\r\n`\r\n\r\nexport const EntryForm = styled.form`\r\n    border: 1px solid #eee;\r\n    width: 50vw;\r\n    margin: 2rem auto;\r\n    padding: 2rem;\r\n    box-shadow: 1px 1px 30px 3px #eaeaea;\r\n    background: #fff;\r\n    border-radius: 2rem;\r\n\r\n    .delete-check {\r\n        z-index: 99999;\r\n        position: fixed;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%, -50%);\r\n        padding: 2rem;\r\n        background: #fff;\r\n        text-align: center;\r\n        border-radius: 2rem;\r\n\r\n        button {\r\n            margin: 0 1rem;\r\n        }\r\n    }\r\n\r\n    .section {\r\n        width: 100%;\r\n        padding-right: 2rem;\r\n        display: flex;\r\n        flex-direction: row;\r\n\r\n        .form-group {\r\n            flex-grow: 1;\r\n            margin: 0 1rem;\r\n        }\r\n\r\n        label, input {\r\n            display: block;\r\n            width: 100%;\r\n        }\r\n\r\n    }\r\n\r\n    .img-preview {\r\n        display: block;\r\n        text-align: center;\r\n        width: 300px;\r\n        margin: auto;\r\n\r\n        div {\r\n            position: relative;\r\n            margin-bottom: 1rem;\r\n            height: 100px;\r\n\r\n            img {\r\n                position: absolute;\r\n                border-radius: 50%;\r\n                width: 100px;\r\n                height: 100px;\r\n                left: 50%;\r\n                transform: translateX(-50%);\r\n                border: 1px solid #eee;\r\n                object-fit: cover;\r\n            }\r\n    \r\n            button.choose-file {\r\n                position: absolute;\r\n                top: 50%;\r\n                left: 50%;\r\n                transform: translate(-50%, -50%);\r\n                border-radius: 50%;\r\n                margin: 0;\r\n                opacity: 0;\r\n            }\r\n\r\n            :hover button.choose-file {\r\n                opacity: 0.8;\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    textarea {\r\n        width: 100%;\r\n        margin: 1rem 5rem 1rem 0;\r\n        height: 200px;\r\n        resize: none;\r\n    }\r\n\r\n    .group{\r\n        width: 50%;\r\n        padding: 0.5rem;\r\n\r\n        label, input {\r\n            display: inline-block;\r\n            margin: 0;\r\n        }\r\n\r\n        .option {\r\n            display: block;\r\n        }\r\n\r\n        :hover {\r\n            cursor: pointer;\r\n        }\r\n    }\r\n`\r\nexport const StyledFilterEntry = styled.div`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n`\r\n\r\nexport const StyledEditor = styled.div`\r\n    margin: 2rem 1rem 0 0; // TODO: fix \r\n    //border: 1px solid #eee;\r\n\r\n    .editor {\r\n        border: 1px solid #eee;\r\n        outline: none;\r\n        font-size: 15px;\r\n        padding: 1rem;\r\n        border-radius: 2rem;\r\n        margin: 1rem 0 0 0;\r\n    }\r\n`\r\n\r\nexport const StyledHousing = styled.div`\r\n    \r\n`","import React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\n\r\nimport { filters } from '../FilterData';\r\nimport { StyledFilterEntry } from '../style/Style';\r\n\r\nexport class FilterEntry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            // do i need these since i have all of the categories in componentDidMount?\r\n            school: this.props.filters.filter(val => filters.school.includes(val)),\r\n            dorm: this.props.filters.filter(val => filters.dorm.includes(val)),\r\n            other: this.props.filters.filter(val => filters.other.includes(val))\r\n        }\r\n    }\r\n\r\n    /*\r\n    let data = this.state;\r\n                let filterArr = [].concat.apply([], Object.values(data));\r\n                this.props.updateData(\"filters\", filterArr);\r\n                */\r\n\r\n    componentDidMount() {\r\n        Object.keys(filters).map(category => this.state[category] = this.props.filters.filter(val => filters[category].includes(val)));\r\n    }\r\n\r\n    updateData(type, target, value) {\r\n        if (type == \"radio\") {\r\n            this.setState({ [target]: value }, () => {\r\n                let data = this.state;\r\n                let filterArr = [].concat.apply([], Object.values(data));\r\n                this.props.updateData(\"filters\", filterArr);\r\n            });\r\n        } else if (type == \"checkbox\") {\r\n            let arrCopy = this.state[target].slice(); // do i need them in individual arrays?\r\n            // let filterArr = [].concat.apply([], Object.values(this.props.filters)); \r\n            // let arrCopy = filterArr.slice();\r\n            if (!arrCopy.includes(value)) {\r\n                arrCopy.push(value);\r\n            } else {\r\n                arrCopy = arrCopy.filter((val) => { \r\n                    return val != value;\r\n                });\r\n            }\r\n            this.setState({ [target]: arrCopy }, () => {\r\n                let data = this.state;\r\n                let filterArr = [].concat.apply([], Object.values(data));\r\n                this.props.updateData(\"filters\", filterArr);\r\n            });\r\n        }\r\n    }\r\n\r\n    isChecked(val) {\r\n        //let filterArr = [].concat.apply([], Object.values(this.props.filters));\r\n        //console.log(filterArr);\r\n        if (this.props.filters.includes(val)) return true;\r\n        return false;\r\n    }\r\n    // after clicking diff tab and returning, when you select item in any group, the prev gropu clears?\r\n\r\n    // check if at least one option in checkbox group is checked\r\n    required(type, category) {\r\n        if (type == \"radio\") {\r\n            if (category == \"sleep\") {\r\n                return false;\r\n            }\r\n            return true;\r\n        }\r\n        if (type == \"checkbox\") {\r\n            if (category == \"other\" || category == \"dorm\") {\r\n                return false;\r\n            }\r\n            if (this.state[category].length == 0) {\r\n                return true;\r\n            } \r\n            return false;\r\n        } \r\n    }\r\n\r\n    showRequired(type, category) {\r\n        if (category == \"school\"|| this.required(type, category)) {\r\n            return true;\r\n        };\r\n        return false;\r\n    }\r\n\r\n    renderGroup(category, type) {\r\n        let arr = [];\r\n        let option;\r\n        for (let i = 0; i < filters[category].length; i++) {\r\n            option = (\r\n                <div className=\"option\">\r\n                    <input \r\n                        type={type} id={filters[category][i]} name={category} value={filters[category][i]} \r\n                        onChange={e => this.updateData(type, category, e.target.value)} \r\n                        //required={type == \"radio\" ? true : this.checkboxRequired(category)}\r\n                        required={this.required(type, category)}\r\n                        checked={this.isChecked(filters[category][i])}/>\r\n                    <label for={filters[category][i]}>{filters[category][i]}</label>\r\n                </div>\r\n            );\r\n            arr.push(option);\r\n        }\r\n        return (\r\n            <div className=\"group\">   \r\n                <b className={this.showRequired(type, category) ? \"required\" : \"\"}>{category}</b>\r\n                {arr}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <StyledFilterEntry>\r\n                {this.renderGroup(\"identity\", \"radio\")}\r\n                {this.renderGroup(\"sleep\", \"radio\")}\r\n                {this.renderGroup(\"school\", \"checkbox\")}\r\n                {this.renderGroup(\"region\", \"radio\")}\r\n                {this.renderGroup(\"campus\", \"radio\")}\r\n                {this.renderGroup(\"other\", \"checkbox\")}\r\n                {this.renderGroup(\"mbti\", \"radio\")}\r\n                {this.renderGroup(\"dorm\", \"checkbox\")}\r\n            </StyledFilterEntry>\r\n        )\r\n    }\r\n}\r\n\r\n// value should be from the db if they are editing - also, the other tabs should stay there bc??\r\n// store every radio button selected (for other, we need to know what \"none\" means tho)\r\n// onChange has to be different for radio and checkbox","import React from 'react';\r\n\r\nimport { EntryForm } from '../style/Style';\r\nimport { TextEditor } from './TextEditor';\r\n\r\nexport class BioEntry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            bio: this.props.about.bio,\r\n            looking: this.props.about.looking,\r\n            quote: this.props.about.quote\r\n        }\r\n    }\r\n\r\n    updateData(target, value) {\r\n        this.setState({ [target]: value }, () => {\r\n            let data = this.state;\r\n            this.props.updateData(\"about\", data);\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div class=\"bio\">\r\n\r\n                <label for=\"quote\"><b>quote</b></label>\r\n                <small>a short tagline about you and/or what you're looking for in a roommate <i>(max 50 chars)</i></small>\r\n                <textarea\r\n                    maxLength=\"50\"\r\n                    style={{marginBottom: \"3rem\", height: \"50px\", overflow: \"hidden\"}}\r\n                    name=\"quote\" \r\n                    onChange={e => this.updateData(\"quote\", e.target.value)} \r\n                    value={this.props.about.quote}/>\r\n\r\n                <label className=\"required\" for=\"about\"><b>about you</b></label>\r\n                {/* <TextEditor \r\n                    name=\"about\"\r\n                    onChange={e => this.updateData(\"bio\", e.target.value)} \r\n                    value={this.props.about.bio}\r\n                    valueRaw={this.props.about.bio}\r\n                    /> */}\r\n                <textarea\r\n                    style={{marginBottom: \"3rem\"}}\r\n                    name=\"about\" \r\n                    onChange={e => this.updateData(\"bio\", e.target.value)} \r\n                    value={this.props.about.bio}\r\n                    required/>\r\n\r\n                <label className=\"required\" for=\"looking-for\"><b>what you're looking for in a roommate</b></label>\r\n                <textarea \r\n                    name=\"looking-for\" \r\n                    onChange={e => this.updateData(\"looking\", e.target.value)} \r\n                    value={this.props.about.looking}\r\n                    required/> \r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n/*\r\n    render() {\r\n        return (\r\n            <div class=\"bio\">\r\n                <textarea \r\n                    name=\"about\" \r\n                    placeholder=\"write about yourself...\" \r\n                    onChange={e => this.props.updateData(\"bio\", e.target.value)} \r\n                    required/>\r\n                <textarea \r\n                    name=\"looking-for\" \r\n                    placeholder=\"what are you looking for in a roommate?\" \r\n                    onChange={e => this.props.updateData(\"looking\", e.target.value)} \r\n                    required/> \r\n            </div>\r\n        )\r\n    }\r\n    */\r\n\r\n// must redesign user object","import React from 'react';\r\nimport {Editor, EditorState, ContentState, RichUtils, convertToRaw, convertFromRaw } from 'draft-js';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\nimport { StyledEditor } from '../style/Style';\r\n\r\nexport class TextEditor extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // editorState: EditorState.createWithContent(ContentState.createFromText(convertFromRaw(this.props.valueRaw))),\r\n      // rawContent: this.props.valueRaw\r\n    };\r\n    //this.onChange = editorState => this.setState({editorState});\r\n\r\n    this.onChange = (editorState) => {\r\n      const contentState = editorState.getCurrentContent();\r\n      //console.log('content state', convertToRaw(contentState));\r\n      this.saveContent(contentState);\r\n      this.setState({ editorState });\r\n    };\r\n\r\n    const rawContent = this.props.valueRaw;\r\n    if (rawContent) {\r\n      this.setState({ editorState: EditorState.createWithContent(convertFromRaw(rawContent)) })\r\n    } else {\r\n      this.setState({ editorState: EditorState.createEmpty() });\r\n    }\r\n  }\r\n\r\n  saveContent = (content) => {\r\n    let raw = JSON.stringify(convertToRaw(content));\r\n    this.props.valueRaw = raw;\r\n  }\r\n\r\n  renderContentAsRawJs() {\r\n    const contentState = this.state.editorState.getCurrentContent();\r\n    const raw = convertToRaw(contentState);\r\n    return JSON.stringify(raw);\r\n  }\r\n\r\n  handleKeyCommand = (command) => {\r\n    const newState = RichUtils.handleKeyCommand(this.state.editorState, command)\r\n    if (newState) {\r\n        this.onChange(newState);\r\n        return 'handled';\r\n    }\r\n    return 'not-handled';\r\n  }\r\n\r\n  onStyleClick(style, e) {\r\n    e.preventDefault();\r\n    this.onChange(RichUtils.toggleInlineStyle(this.state.editorState, style));\r\n  }\r\n\r\n  toggleBlockType(style, e) {\r\n    e.preventDefault();\r\n    this.onChange(RichUtils.toggleBlockType(this.state.editorState, style));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <StyledEditor>\r\n        <div className=\"utils\">\r\n          <button onClick={(e) => this.onStyleClick('BOLD', e)}><b>B</b></button>\r\n          <button onClick={(e) => this.onStyleClick('ITALIC', e)}><i>I</i></button>\r\n          <button onClick={(e) => this.onStyleClick('UNDERLINE', e)}><u>U</u></button>\r\n          <button onClick={(e) => this.toggleBlockType('unordered-list-item', e)}>UL</button>\r\n          <button onClick={(e) => this.toggleBlockType('ordered-list-item', e)}>OL</button>\r\n        </div>\r\n\r\n        <div className=\"editor\">\r\n          <Editor \r\n            editorState={this.state.editorState} \r\n            handleKeyCommand={this.handleKeyCommand}\r\n            onChange={this.onChange} />\r\n        </div>\r\n      </StyledEditor>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport 'remixicon/fonts/remixicon.css'\r\n\r\nexport class BasicsEntry extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            basics: this.props.basics,\r\n            social: this.props.social,\r\n            image: this.props.image,\r\n            imageFile: null,\r\n            newImg: false\r\n        }\r\n        this.hiddenFileInput = React.createRef();\r\n    }\r\n\r\n    updateData(category, target, value) {\r\n        let copy = this.state[category];\r\n        copy[target] = value;\r\n        this.setState({ [category]: copy }, () => {\r\n            let data = this.state[category];\r\n            //console.log(data)\r\n            this.props.updateData(category, data);\r\n        });\r\n    }\r\n\r\n    handleUpload(e) {\r\n        if (this.state.image != \"/wildcat-roomie/pfp.jpg\") {\r\n            this.setState({ newImg: true });\r\n        } // ???\r\n        this.props.updateData(\"img\", e.target.value);\r\n        this.fileToDataUri(e.target.files[0])\r\n            .then(base64 => {\r\n                this.setState({\r\n                    image: base64,\r\n                    imageFile: e.target.files[0]\r\n                })\r\n            })\r\n        // this.setState({ \r\n        //     //image: URL.createObjectURL(e.target.files[0]),\r\n        //     image: this.fileToDataUri(e.target.files[0]),\r\n        //     imageFile: e.target.files[0]\r\n        // });\r\n\r\n    }\r\n\r\n    fileToDataUri = (file) => new Promise((resolve, reject) => {\r\n        // const reader = new FileReader();\r\n        // reader.onload = (event) => {\r\n        //   resolve(event.target.result)\r\n        // };\r\n        //reader.readAsDataURL(file);\r\n\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    })\r\n\r\n    uploadImg = (e) => {\r\n        e.preventDefault();\r\n\r\n        // if replacing an image, delete image first\r\n        if (this.state.newImg) {\r\n            this.imgurDelete(this.props.imageDelete);\r\n        }\r\n\r\n        const formData = new FormData();\r\n        formData.append('type', 'file')\r\n\r\n        this.fileToDataUri(this.state.imageFile)\r\n            .then(result => {\r\n                //const fix = result.split(',')[1].replace(/\\+/g, '/').replace(/_/g, '/').replace(/\\-/g, '/'); // wait so i need this?\r\n                return result.split(',')[1];\r\n            })\r\n            .then(blob => {\r\n                formData.append('image', blob);\r\n                return formData;\r\n            })\r\n            .then(formData => {\r\n                console.log(formData)\r\n                this.imgurPost(formData);\r\n            })\r\n    }\r\n\r\n    imgurPost(formData) {\r\n        fetch(\"https://api.imgur.com/3/image\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                'Authorization': `Client-ID ${process.env.REACT_APP_CLIENTID}`,\r\n            },\r\n            body: formData\r\n        })\r\n        .then(res => {\r\n            if (res.status == 200) {\r\n                return res.json();\r\n            } else {\r\n                console.log(\"error\", res.status);\r\n                return res.json();\r\n            }\r\n        })\r\n        .then(data => {\r\n            // save data.data.link and data.data.deletehash\r\n            // should check that there is no error before calling handleImg\r\n            if (data.status == 200) {\r\n                this.props.handleImg({\r\n                    link: data.data.link,\r\n                    deleteHash: data.data.deletehash\r\n                }, false);\r\n                //this.props.setEntryMsg(\"profile picture saved!\");\r\n                return data;\r\n            } else {\r\n                //this.props.setEntryMsg(data.data.error);\r\n                this.props.handleImg({\r\n                    error: data.data.error\r\n                })\r\n                console.log(data.data.error);\r\n                return data;\r\n            }\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            throw err;\r\n        });\r\n    }\r\n\r\n    imgurDelete(deleteHash) {\r\n        fetch(`https://api.imgur.com/3/image/${deleteHash}`, {\r\n            method: \"DELETE\",\r\n            headers: {\r\n                'Authorization': `Client-ID ${process.env.REACT_APP_CLIENTID}`,\r\n            },\r\n        })\r\n        .then(res => {\r\n            if (res.status == 200) {\r\n                return res.json();\r\n            } else {\r\n                console.log(\"error\", res.status);\r\n                return res.json();\r\n            }\r\n        })\r\n        .then(data => {\r\n            console.log(data);\r\n            return data;\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n            throw err;\r\n        });\r\n    }\r\n\r\n    chooseFile = (e) => {\r\n        e.preventDefault();\r\n        this.hiddenFileInput.current.click();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div class=\"section img-preview\">\r\n                    <div>\r\n                        <img src={this.state.image}/>\r\n                        <button className=\"choose-file\" onClick={this.chooseFile} title=\"choose file\">\r\n                            <i className=\"ri-upload-line\"></i>\r\n                        </button>\r\n                    </div>\r\n\r\n\r\n                    <input \r\n                        type=\"file\" ref={this.hiddenFileInput} \r\n                        style={{display: \"none\"}}\r\n                        onChange={e => this.handleUpload(e)}/>\r\n    \r\n                    <button style={{marginBottom: \"1rem\"}} onClick={this.uploadImg}>save profile picture</button>\r\n                </div>\r\n\r\n                <div class=\"section\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"first-name\" className=\"required\">first name</label>\r\n                        <input \r\n                            type=\"name\" name=\"first-name\" placeholder=\"Jane\" \r\n                            onChange={e => this.props.updateData(\"firstName\", e.target.value)}\r\n                            value={this.props.firstName}\r\n                            required/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"last-name\" className=\"required\">last name</label>\r\n                        <input \r\n                            type=\"name\" name=\"last-name\" placeholder=\"Doe\" \r\n                            onChange={e => this.props.updateData(\"lastName\", e.target.value)}\r\n                            value={this.props.lastName}\r\n                            required/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"pronouns\" className=\"required\">pronouns</label>\r\n                        <input \r\n                            type=\"text\" name=\"pronouns\" placeholder=\"she/her\" \r\n                            onChange={e => this.updateData(\"basics\", \"pronouns\", e.target.value)}\r\n                            value={this.props.basics.pronouns}\r\n                            required/>\r\n                    </div>\r\n                </div>\r\n\r\n              <div class=\"section\">\r\n                    <div class=\"form-group\">\r\n                        <label for=\"location\" className=\"required\">location</label>\r\n                        <input \r\n                            type=\"text\" name=\"location\" placeholder=\"NYC\"\r\n                            onChange={e => this.updateData(\"basics\", \"location\", e.target.value)}\r\n                            value={this.props.basics.location}\r\n                            required/>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label for=\"major\" className=\"required\">major</label>\r\n                        <input \r\n                            type=\"text\" name=\"major\" placeholder=\"computer science\"\r\n                            onChange={e => this.updateData(\"basics\", \"major\", e.target.value)}\r\n                            value={this.props.basics.major} \r\n                            required/>\r\n                    </div>\r\n\r\n                </div>\r\n\r\n              <div class=\"section\">\r\n                <div class=\"form-group\">\r\n                    <label for=\"phone\">phone</label>\r\n                    <input \r\n                        type=\"text\" name=\"phone\" placeholder=\"phone number\"\r\n                        onChange={e => this.updateData(\"social\", \"phone\", e.target.value)}\r\n                        value={this.props.social.phone}/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"instagram\">instagram</label>\r\n                    <input \r\n                        type=\"text\" name=\"instagram\" placeholder=\"username only, no @\"\r\n                        onChange={e => this.updateData(\"social\", \"ig\", e.target.value)}\r\n                        value={this.props.social.ig}/>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <label for=\"snapchat\">snapchat</label>\r\n                    <input \r\n                        type=\"text\" name=\"snapchat\" placeholder=\"username only, no @\"\r\n                        onChange={e => this.updateData(\"social\", \"snap\", e.target.value)}\r\n                        value={this.props.social.snapchat}/>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"group\" style={{marginLeft: \"1.5rem\"}}>\r\n                <div className=\"option\">\r\n                    <input \r\n                        type=\"checkbox\" name=\"roommate\" id=\"roommate\"\r\n                        onChange={e => this.props.updateData(\"roommate\", !this.props.roommate)}\r\n                        checked={this.props.roommate}/>\r\n                    <label for=\"roommate\">looking for a roommate</label>\r\n                </div>\r\n              </div>\r\n\r\n            </>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Link, Route, Switch, withRouter } from 'react-router-dom';\r\n\r\nimport { EmailEntry, EntryForm, EntryContainer } from '../style/Style';\r\nimport { Overlay } from '../style/ProfileStyles';\r\nimport { FilterEntry } from './FilterEntry';\r\nimport { BioEntry } from './BioEntry';\r\nimport { BasicsEntry } from './BasicsEntry';\r\n\r\n//const url = \"http://localhost:9000\";\r\nconst url = \"https://wildcat-roomie.herokuapp.com\";\r\n\r\nexport default class Entry extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        currentTab: \"basics\",\r\n        newEntry: this.props.newEntry,\r\n        emailChecked: false, // for entering email to check but also creating new \r\n        emailMsg: \"\",\r\n        entryMsg: \"\",\r\n        postMsg: \"\",\r\n        email: \"\",\r\n        userId: 0,\r\n        about: {},\r\n        basics: {},\r\n        social: {},\r\n        filters: [],\r\n        img: \"/wildcat-roomie/pfp.jpg\", \r\n        imgDelete: null,\r\n        roommate: false,\r\n        isPosted: false,\r\n        deleting: false,\r\n        deleteMsg: \"are you sure you want to delete your profile?\"\r\n      }\r\n    }\r\n\r\n    componentDidUpdate(prevState) {\r\n      if (!prevState.emailChecked && this.state.emailChecked) {\r\n        this.updateLastLogin(this.state.userId);\r\n      }\r\n    }\r\n\r\n    checkEmail = (e) => {\r\n      e.preventDefault();\r\n      const data = {};\r\n      data.email = this.state.email;\r\n\r\n      if (this.state.newEntry) {\r\n        this.addUser(data);\r\n      } else {\r\n        this.getData();\r\n      }\r\n    }\r\n\r\n    updateLastLogin() {\r\n      fetch(`${url}/api/profiles/update/last_login`, {\r\n          method: 'POST',\r\n          body: JSON.stringify({ userId: this.state.userId }),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n      })\r\n      .then(res => {\r\n        console.log(res.status)\r\n        if (res.status === 200) {\r\n          console.log(\"success\");\r\n          return res.json();\r\n        } else {\r\n          console.log(\"error\")\r\n          return res.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if (data.error) console.log(data.error);\r\n        else if (data.message) {\r\n          console.log(data.message);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n    }\r\n\r\n    addUser(data) {\r\n      console.log(\"calling addUser\")\r\n      fetch(`${url}/api/profiles/addUser`, {\r\n          method: 'POST',\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n      })\r\n      .then(res => {\r\n        console.log(res.status)\r\n        if (res.status === 200) {\r\n          console.log(\"user added\");\r\n          return res.json();\r\n        } else {\r\n          console.log(\"error\")\r\n          return res.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if (data.error) this.setState({ emailMsg: data.error });\r\n        else if (data.message) {\r\n          this.setState({\r\n            userId: data.userId,\r\n            emailMsg: data.message,\r\n            emailChecked: true\r\n          });\r\n          this.getData();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        this.setState({ emailMsg: \"an unknown error has occured\" });\r\n      });\r\n    }\r\n\r\n    renderTab(i) {\r\n      if (i == \"basics\") {\r\n        return <BasicsEntry \r\n                basics={this.state.basics} \r\n                social={this.state.social} \r\n                firstName={this.state.firstName} lastName={this.state.lastName} roommate={this.state.roommate}\r\n                updateData={this.updateData} handleImg={(data) => this.handleImg(data)}\r\n                image={this.state.img} imageDelete={this.state.imgDelete}\r\n                setEntryMsg={(msg) => this.setEntryMsg(msg)}/>;\r\n      } else if (i == \"filters\") {\r\n        return <FilterEntry filters={this.state.filters} updateData={this.updateData}/>;\r\n      } else {\r\n        return <BioEntry about={this.state.about} updateData={this.updateData}/>;\r\n      }\r\n    }\r\n\r\n    changeTab(i, e) {\r\n      e.preventDefault();\r\n      this.setState({ currentTab: i, entryMsg: \"\" });\r\n    }\r\n\r\n    updateData = (target, value) => {\r\n      console.log(target, value);\r\n      this.setState({ [target]: value });\r\n    };\r\n\r\n    handleChange = (event) => {\r\n      const { value, name } = event.target;\r\n      this.setState({\r\n        [name]: value\r\n      });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      console.log(\"handling submit\")\r\n\r\n      let info;\r\n      if (this.state.currentTab == \"basics\") {\r\n        info = {\r\n          firstName: this.state.firstName, \r\n          lastName: this.state.lastName,\r\n          basics: this.state.basics,\r\n          social: this.state.social,\r\n          roommate: this.state.roommate\r\n        }\r\n      } else {\r\n        let tab = this.state.currentTab;\r\n        info = { [tab]: this.state[tab]};\r\n      }\r\n\r\n      const data = {\r\n        userId: this.state.userId,\r\n        data: info\r\n        // but on basics page i have data that goe in multiple sections... \r\n        // data should be a parameter that is an object of what data im sending \r\n      }\r\n      console.log(\"data\\n\", data);\r\n\r\n      console.log(\"updating profile\")\r\n      this.callUpdate(data, false);\r\n    }\r\n\r\n    callUpdate(data, posting) {\r\n      let msg = \"\";\r\n      if (data.error) {\r\n        this.setState({ entryMsg: \"an error occured while saving your image :/\" });\r\n        return data;\r\n      } \r\n      if (data.data.img) {\r\n        msg = \"profile picture saved!\";\r\n      }\r\n\r\n      fetch(`${url}/api/profiles/update`, {\r\n          method: 'POST',\r\n          body: JSON.stringify(data),\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n      })\r\n      .then(res => {\r\n        console.log(res)\r\n        if (res.status === 200) {\r\n          console.log(\"info added\");\r\n          return res.json();\r\n        } else {\r\n          console.log(\"error\")\r\n          return res.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if (data.error) this.setState({ entryMsg: data.error });\r\n        else if (data.message) {\r\n          this.setState({ entryMsg: \"\" });\r\n          setTimeout(() => {\r\n            if (posting) {\r\n              this.setState({ entryMsg: \"Your profile has been posted! Head over to the homepage to look :)\"});\r\n            } else {\r\n              this.setState({ entryMsg: msg ? msg : data.message });\r\n            }\r\n          }, 500);\r\n          this.getData();\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        this.setState({ entryMsg: \"an unknown error has occured\" });\r\n      });\r\n    }\r\n\r\n    getData() {\r\n      console.log(\"calling getData\")\r\n      fetch(`${url}/api/profiles?email=${this.state.email}`, {\r\n          method: 'GET',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n      })\r\n      .then(res => {\r\n        console.log(res.status)\r\n        if (res.status === 200) {\r\n          console.log(\"got info\");\r\n          return res.json();\r\n        } else {\r\n          console.log(\"error\")\r\n          return res.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if (data.error) {\r\n          if (!this.state.newEntry) {\r\n            this.setState({ emailMsg: data.error });\r\n          } else {\r\n            this.setState({ entryMsg: data.error }); \r\n          }\r\n        }\r\n        else {\r\n          // display data in the form(s) \r\n          const snakeToCamel = snakeCaseString => snakeCaseString.replace(/([-_]\\w)/g, g => g[1].toUpperCase());\r\n          console.log(data);\r\n          this.setState({ firstName: \"\", lastName: \"\", about: {}, basics: {}, social: {}, filters: [] });\r\n          let keys = Object.keys(data);\r\n          for (let i = 0; i < keys.length; i++) {\r\n            if (data[keys[i]] !== null) this.setState({ [snakeToCamel(keys[i])]: data[keys[i]] });\r\n          }\r\n          if (!this.state.newEntry) this.setState({ emailChecked: true });\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        this.setState({ entryMsg: \"an unknown error has occured\", emailMsg: \"an unknown error has occured\" });\r\n      });\r\n    }\r\n\r\n    handlePost() {\r\n      // set is_posted to true \r\n      // can only post when info is filled out \r\n      const data = {\r\n        userId: this.state.userId,\r\n        data: { isPosted: true }\r\n      }\r\n      if (!this.isFilled()) {\r\n        this.setState({ entryMsg: \"You must fill out all the parts to post your profile.\" });\r\n      } else {\r\n        this.callUpdate(data, true);\r\n      }\r\n      // how do i check if all the forms are filled out?? none of them are empty strings?\r\n    }\r\n\r\n    // check if all forms are filled out \r\n    isFilled() {\r\n      const keyArr = Object.keys(this.state).filter(key => key !== \"currentTab\" && key !== \"newEntry\" && key !== \"emailMsg\" && key !== \"entryMsg\" && key !== \"postMsg\" && key !== \"userId\" && key !== \"isPosted\" && key !== \"emailChecked\" && key !== \"img\" && key !== \"imgDelete\" && key !== \"social\" && key != \"deleting\" && key !== \"deleteMsg\");\r\n      for (let i = 0; i < keyArr.length; i++) {\r\n        let key = keyArr[i];\r\n        if (typeof this.state[key] == \"string\" && this.state[key].trim().length == 0) {\r\n          return false;\r\n        } else if (typeof this.state[key] == \"object\" && Object.keys(this.state[key]).length == 0) {\r\n          return false;\r\n        } else if (Array.isArray(this.state[key]) && this.state[key].length == 0) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n\r\n    // send img data to db \r\n    handleImg(resData) {\r\n      let data;\r\n      if (resData.error) {\r\n        data = {\r\n          error: resData.error\r\n        }\r\n      } else {\r\n        data = {\r\n          userId: this.state.userId,\r\n          data: {\r\n            img: resData.link,\r\n            imgDelete: resData.deleteHash\r\n          }\r\n        }\r\n      }\r\n      this.callUpdate(data, false);\r\n    }\r\n\r\n    deleteProfile(e) {\r\n      e.preventDefault();\r\n\r\n      fetch(`${url}/api/profiles/delete?userId=${this.state.userId}`, {\r\n          method: 'DELETE',\r\n          headers: {\r\n            'Content-Type': 'application/json'\r\n          }\r\n      })\r\n      .then(res => {\r\n        console.log(res)\r\n        if (res.status === 200) {\r\n          console.log(\"deleted\");\r\n          return res.json();\r\n        } else {\r\n          console.log(\"error\")\r\n          return res.json();\r\n        }\r\n      })\r\n      .then(data => {\r\n        if (data.message) {\r\n          this.setState({ deleteMsg: \"your profile has been deleted :( redirecting to home page...\" });\r\n          setTimeout(() => {\r\n            this.props.history.push(\"/\");\r\n          }, 2500);\r\n        }\r\n        console.log(data);\r\n        return data;\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        this.setState({ deleteMsg: \"an unknown error has occured\" });\r\n      });\r\n    }\r\n    \r\n    render() {\r\n\r\n      if (!this.state.emailChecked) {\r\n        return (\r\n          <EmailEntry>\r\n            <form onSubmit={this.checkEmail}>\r\n              <label for=\"email\">{this.state.newEntry ? \"new profile\" : \"edit profile\"}</label>\r\n              <input \r\n                type=\"email\" name=\"email\" value={this.state.email} \r\n                onChange={this.handleChange} placeholder=\"email\" required/>\r\n              <input type=\"submit\" value=\"enter\"/>\r\n              {this.state.emailMsg}\r\n            </form>\r\n          </EmailEntry>\r\n        )\r\n      }\r\n\r\n      return (\r\n        <EntryContainer>\r\n          <div className=\"nav\">\r\n            <button onClick={(e) => this.changeTab(\"basics\", e)}>basics</button>\r\n            <button onClick={(e) => this.changeTab(\"filters\", e)}>filters</button>\r\n            <button onClick={(e) => this.changeTab(\"about\", e)}>about</button>\r\n\r\n            {!this.state.isPosted ? \r\n              <button onClick={() => this.handlePost()}>post</button> : \r\n              <button title=\"delete profile\" onClick={() => this.setState({ deleting: true })}>delete</button>}\r\n\r\n            <br/>{this.state.entryMsg}\r\n          </div>\r\n\r\n          <EntryForm onSubmit={this.handleSubmit}>\r\n            {this.renderTab(this.state.currentTab)}\r\n\r\n            {this.state.deleting ?\r\n              <Overlay opacity={0.5}>\r\n                <div className=\"delete-check\">\r\n                  <h1>{this.state.deleteMsg}</h1>\r\n                  <button onClick={(e) => this.deleteProfile(e)}>yes</button>\r\n                  <button onClick={() => this.setState({ deleting: false })}>no</button>\r\n                </div> \r\n              </Overlay>\r\n            : null}\r\n\r\n            <input type=\"submit\" value=\"save\"/>\r\n          </EntryForm>\r\n\r\n        </EntryContainer>\r\n      );\r\n    }\r\n  }\r\n\r\n  Entry.defaultProps = {\r\n    newEntry: false\r\n  }\r\n\r\n  const formStyle = {\r\n    border: \"1px solid #eee\",\r\n    width: \"50vw\",\r\n    margin: \"auto\",\r\n    padding: \"2rem\"\r\n  }\r\n\r\n  // when save is clicked, the values are saved in the state. when the submit button is clicked, db is updated \r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nexport class Instructions extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>wtf is this?</h3>\r\n                <p>Hey there! Welcome!!</p>\r\n\r\n                <p>\r\n                    I'm Rachel Lin, an incoming computer science major, and I worked on this instead of paying attention in class :)\r\n                    Here's my <a target=\"_blank\" href=\"https://instagram.com/dklarachel\">instagram</a>, my email is rachlin232@gmail.com, and you can CTRL/CMD+F \"Rachel Lin\" to find out more about me!<br/>\r\n                    I created this as a way to more easily view and filter profiles. \r\n                    Click the filter categories (\"sleep\", \"school\", etc.) to see the filters. Click on filter to add filter.\r\n                    Click on filter again to remove filter. \r\n                </p>\r\n\r\n                <p>\r\n                    Click on a card to see more about the person!\r\n                    Their profile displays their tags, basic info about them, contact info, a bio, and what they're looking for in a roommate.\r\n                </p>\r\n\r\n                <p>\r\n                    This is not only for those looking for roommates! Also if you're looking for friends / people with similar interests.\r\n                    You can indicate whether or not you're looking for a roommate; you can un/check \"show only those looking for roommate.\"\r\n                </p>\r\n\r\n                <br/>\r\n                <h3>get started</h3>\r\n\r\n                <p>\r\n                    Create your profile by clicking \"new profile,\" entering an email, then filling out the form.\r\n                    You must click \"save\" for each part of the profile form to save the info you input. \r\n                    <br/>Your profile won't be posted on the home page until you click \"post\"! \r\n                </p>\r\n\r\n                <p>\r\n                    There is a singular \"save\" button for each part of the form, but you must save your profile image with \"save profile picture.\"\r\n                    <br/>Try to limit your pictures to nothing much bigger than 200px x 200px and preferably JPG as opposed to PNG but it's not a requirement. \r\n                    <br/>Yes, the \"about you\" and \"what you're looking for in a roommate\" sections preserve line breaks you make. \r\n                </p>\r\n\r\n                <p>\r\n                    Click on \"edit profile\" to edit your profile. You'll be prompted to enter the email you used to create the profile.\r\n                    <i>What kind of authentication is that?</i> you say. It's not authentication. \r\n                    I mean, you can edit anyone's info on the roommate doc and none of the info you input is private; just be nice and don't try to edit someone else's profile thank you xx.\r\n                </p>\r\n\r\n                <p>\r\n                    Please provide feedback in the form that I linked! \r\n                    Let me know about any bugs, comments, concerns, anything you'd liked added, etc.\r\n                    If there is a bug, please do your best to detail the steps with which you reached the bug, so I can reproduce the issue.\r\n                </p>\r\n\r\n                <p>\r\n                    * wow this sounds bad but I'm hosting the API on Heroku and it sometimes randomly crashes? i find that if i refresh the page it'll work.\r\n                </p>\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nimport { StyledHousing } from \"./style/Style\";\r\n\r\nexport class Housing extends React.Component {\r\n    render() {\r\n        return (\r\n            <StyledHousing>\r\n                <ul>\r\n                    <li><a target=\"_blank\" href=\"https://www.northwestern.edu/living/housing-options/undergrad-housing/index.html\">housing website</a></li>\r\n                    <li><a target=\"_blank\" href=\"https://bit.ly/32kRcLU\">housing portal</a></li>\r\n                    <li>dorm info: \r\n                        &nbsp;<a target=\"_blank\" href=\"https://docs.google.com/spreadsheets/d/1KYVTUGvwdzCUUJZw17_ds5qrw-pEHBwT07KdhiZ9aS0/edit\">spreadsheet</a>\r\n                        &nbsp;/ <a target=\"_blank\" href=\"https://www.northwestern.edu/living/housing-options/undergrad-housing/assets/f19_unit-profiles-compare-tables.pdf\">PDF</a>\r\n                    </li>\r\n\r\n                    <li> dorm tours\r\n                        <ul>\r\n                            <li><a target=\"_blank\" href=\"https://www.youtube.com/watch?v=aHrHqJ1VkWE\">Willard</a></li>\r\n                            <li><a target=\"_blank\" href=\"https://www.youtube.com/watch?v=M9ywHIF06mE&t=1s\">Lincoln</a></li>\r\n                        </ul>\r\n                    </li>\r\n                </ul>\r\n            </StyledHousing>\r\n        )\r\n    }\r\n}","import React from 'react';\r\n\r\nexport class RoommateHelp extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>questions to ask a potential roommate</h3>\r\n                <ul>\r\n                   <li>do you want to coordinate room decor?</li> \r\n                   <li>what does your ideal dorm look like?</li>\r\n                   <li>chores?</li>\r\n                   <li>how do you feel about guests? what level of privacy do you prefer?</li>\r\n                   <li>how do you like to study?</li>\r\n                   <li>allergies?</li>\r\n                   <li>what are you bringing to the dorm?</li>\r\n                   <li>what item can you not live without?</li>\r\n                </ul>\r\n\r\n                <br/>\r\n                <h3>roommate agreement/contract</h3>\r\n                soon...\r\n            </div>\r\n        )\r\n    }\r\n}","import './css/App.css';\nimport './css/animations.css';\n\nimport { BrowserRouter as Router, Link, Route, Switch, withRouter } from 'react-router-dom';\nimport React from 'react';\n\nimport Container from './Container'; \nimport Entry from './entry/Entry';\nimport { Instructions } from './Instructions';\nimport { Housing } from './Housing';\nimport { RoommateHelp } from './RoommateHelp';\n\nimport { StyledContainer } from './style/ProfileStyles';\n\nfunction noop() {}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      newEntry: false,\n    }\n  }\n\n  render () {\n    if (process.env.NODE_ENV !== 'development') {\n      console.log = noop;\n      console.warn = noop;\n      console.error = noop;\n    }\n    \n    return (\n      //<Router>\n      <StyledContainer>\n        <div className=\"header\">\n          <h1>wildcat roomie</h1>\n          <Link to=\"/\">home</Link>\n          <Link to=\"/instructions\">instructions</Link>\n          <Link onClick={() => this.setState({ newEntry: false })} to=\"/entry\">edit profile</Link>\n          <Link onClick={() => this.setState({ newEntry: true })} to=\"/entry\">new profile</Link>\n          <Link to=\"/housing\">housing info</Link>\n          <Link to=\"/help\">roommate help</Link>\n          <a target=\"_blank\" href=\"https://forms.gle/NfMPxFaHm31YySf66\">feedback</a>\n        </div>\n\n        <Switch>\n          <Route path=\"/\" exact component={Container} />\n          <Route path=\"/instructions\" component={Instructions}/>\n          <Route path=\"/entry\" key={`${this.state.newEntry}`} exact render={() => <Entry newEntry={this.state.newEntry} history={this.props.history}/>}/>\n          <Route path=\"/housing\" component={Housing}/>\n          <Route path=\"/help\" component={RoommateHelp}/>\n        </Switch>\n\n      </StyledContainer>\n      //</Router>\n    );\n  }\n}\n\nexport default withRouter(App);\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}